{
  "api/index.html": {
    "href": "api/index.html",
    "title": "API reference | wan24-Poedit",
    "keywords": "API reference Choose a type from the left to start browsing."
  },
  "api/wan24.Poedit.PoeditTranslationTerms.html": {
    "href": "api/wan24.Poedit.PoeditTranslationTerms.html",
    "title": "Class PoeditTranslationTerms | wan24-Poedit",
    "keywords": "Class PoeditTranslationTerms Poedit translation terms Inheritance object PoeditTranslationTerms Implements ITranslationTerms IReadOnlyDictionary<string, string> IReadOnlyCollection<KeyValuePair<string, string>> IEnumerable<KeyValuePair<string, string>> IEnumerable IStringLocalizer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.Poedit Assembly: wan24Poedit.dll Syntax public class PoeditTranslationTerms : ITranslationTerms, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, IStringLocalizer Remarks Constructor Constructors | Edit this page View Source PoeditTranslationTerms(in POCatalog) Poedit translation terms Declaration public PoeditTranslationTerms(in POCatalog po) Parameters Type Name Description POCatalog po PO catalog Remarks Constructor Properties | Edit this page View Source Catalog PO catalog Declaration public POCatalog Catalog { get; } Property Value Type Description POCatalog | Edit this page View Source Count Gets the number of elements in the collection. Declaration public int Count { get; } Property Value Type Description int The number of elements in the collection. | Edit this page View Source this[string, int, string[]] Get a term Declaration public string this[in string key, in int count, params string[] values] { get; } Parameters Type Name Description string key Term key int count Count (for plural translation) string[] values Parser values Property Value Type Description string Term Exceptions Type Condition NotSupportedException Plural terms are not supported | Edit this page View Source this[string, string[]] Get a term Declaration public string this[in string key, params string[] values] { get; } Parameters Type Name Description string key Term key string[] values Parser values Property Value Type Description string Term | Edit this page View Source Keys Gets an enumerable collection that contains the keys in the read-only dictionary. Declaration public IEnumerable<string> Keys { get; } Property Value Type Description IEnumerable<string> An enumerable collection that contains the keys in the read-only dictionary. | Edit this page View Source PluralSupport Does support plural? Declaration public bool PluralSupport { get; } Property Value Type Description bool | Edit this page View Source Values Gets an enumerable collection that contains the values in the read-only dictionary. Declaration public IEnumerable<string> Values { get; } Property Value Type Description IEnumerable<string> An enumerable collection that contains the values in the read-only dictionary. Methods | Edit this page View Source ContainsKey(string) Determines whether the read-only dictionary contains an element that has the specified key. Declaration public bool ContainsKey(string key) Parameters Type Name Description string key The key to locate. Returns Type Description bool true if the read-only dictionary contains an element that has the specified key; otherwise, false. Exceptions Type Condition ArgumentNullException key is null. | Edit this page View Source FromBytes(in byte[]) Create from bytes (UTF-8 encoded PO string) Declaration public static PoeditTranslationTerms FromBytes(in byte[] data) Parameters Type Name Description byte[] data PO data Returns Type Description PoeditTranslationTerms Translation terms | Edit this page View Source FromFile(in string) Create from a PO file Declaration public static PoeditTranslationTerms FromFile(in string fileName) Parameters Type Name Description string fileName PO filename Returns Type Description PoeditTranslationTerms Translation terms | Edit this page View Source FromFileAsync(string, CancellationToken) Create from a PO file Declaration public static Task<PoeditTranslationTerms> FromFileAsync(string fileName, CancellationToken cancellationToken = default) Parameters Type Name Description string fileName PO filename CancellationToken cancellationToken Cancellation token Returns Type Description Task<PoeditTranslationTerms> Translation terms | Edit this page View Source FromStream(in Stream) Create from a PO stream Declaration public static PoeditTranslationTerms FromStream(in Stream stream) Parameters Type Name Description Stream stream PO stream (won't be disposed) Returns Type Description PoeditTranslationTerms Translation terms | Edit this page View Source FromStreamAsync(Stream, CancellationToken) Create from a PO stream Declaration public static Task<PoeditTranslationTerms> FromStreamAsync(Stream stream, CancellationToken cancellationToken = default) Parameters Type Name Description Stream stream PO stream (won't be disposed) CancellationToken cancellationToken Cancellation token Returns Type Description Task<PoeditTranslationTerms> Translation terms | Edit this page View Source FromString(in string) Create from a PO string Declaration public static PoeditTranslationTerms FromString(in string str) Parameters Type Name Description string str PO string Returns Type Description PoeditTranslationTerms Translation terms | Edit this page View Source GetEnumerator() Returns an enumerator that iterates through the collection. Declaration public IEnumerator<KeyValuePair<string, string>> GetEnumerator() Returns Type Description IEnumerator<KeyValuePair<string, string>> An enumerator that can be used to iterate through the collection. | Edit this page View Source GetTerm(in string, in int, params string[]) Get a term Declaration public string GetTerm(in string key, in int count, params string[] values) Parameters Type Name Description string key Term key int count Count (for plural translation) string[] values Parser values Returns Type Description string Term | Edit this page View Source GetTerm(in string, params string[]) Get a term Declaration public string GetTerm(in string key, params string[] values) Parameters Type Name Description string key Term key string[] values Parser values Returns Type Description string Term | Edit this page View Source StringLocalizer(in string, in object[]) String localizer used for the IStringLocalizer implementation Declaration protected virtual LocalizedString StringLocalizer(in string name, in object[] arguments) Parameters Type Name Description string name Name object[] arguments Arguments Returns Type Description LocalizedString Localized string | Edit this page View Source TryGetValue(string, out string) Gets the value that is associated with the specified key. Declaration public bool TryGetValue(string key, out string value) Parameters Type Name Description string key The key to locate. string value When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized. Returns Type Description bool true if the object that implements the IReadOnlyDictionary<TKey, TValue> interface contains an element that has the specified key; otherwise, false. Exceptions Type Condition ArgumentNullException key is null. Implements wan24.Core.ITranslationTerms IReadOnlyDictionary<TKey, TValue> IReadOnlyCollection<T> IEnumerable<T> IEnumerable IStringLocalizer"
  },
  "api/wan24.Poedit.html": {
    "href": "api/wan24.Poedit.html",
    "title": "Namespace wan24.Poedit | wan24-Poedit",
    "keywords": "Namespace wan24.Poedit Classes PoeditTranslationTerms Poedit translation terms"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "wan24-Poedit Wiki | wan24-Poedit",
    "keywords": "wan24-Poedit Wiki"
  },
  "index.html": {
    "href": "index.html",
    "title": "wan24-Poedit | wan24-Poedit",
    "keywords": "wan24-Poedit This library contains an adapter for using Poedit PO files with wan24-Core translation helpers. Karambolo.PO is being referenced for that, 'cause no PO format parsing is implemented in wan24-Poedit. Usage How to get it This library is available as NuGet package \"wan24-Poedit\". Loading a translation from Poedit PO format // From a PO file PoeditTranslationTerms terms = PoeditTranslationTerms.FromFile(\"/path/to/file.po\"); PoeditTranslationTerms terms = await PoeditTranslationTerms.FromFileAsync(\"/path/to/file.po\"); // From a PO stream PoeditTranslationTerms terms = PoeditTranslationTerms.FromStream(poStream); PoeditTranslationTerms terms = await PoeditTranslationTerms.FromStreamAsync(poStream); // From a PO string PoeditTranslationTerms terms = PoeditTranslationTerms.FromString(poString); // From a byte array (UTF-8 encoded PO string) PoeditTranslationTerms terms = PoeditTranslationTerms.FromBytes(poData); // From a POCatalog PoeditTranslationTerms terms = new(poCatalog); The created terms instance can be used for the wan24-Core Translation. Please refer to the wan24-Core documentation for more details about that. Creating a PO file from source code This library only contains PO reading helpers for working with the wan24-Core translation helpers. For creating a PO file you might want to use the dotnet tool wan24-PoeditParser, which is able to parse C# source code (and any other source language code) and create a PO file, which can be used with Poedit. Also the wan24-PoeditParser can be used as custom extractor for the Poedit GUI."
  }
}